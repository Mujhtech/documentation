{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI Plant Store",
    "description": "A sample API that uses a plant store as an example to demonstrate features in the OpenAPI specification",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.swyftpay.io/api/v1"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/customers": {
      "get": {
        "description": "Returns all customers",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Page Limit",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page size",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Customers response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Customer"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates a new customer",
        "requestBody": {
          "description": "Customer to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewCustomer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Customer response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "500": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/cards": {
      "get": {
        "description": "Returns all cards",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Page Limit",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page size",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cards response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Card"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates a new card",
        "requestBody": {
          "description": "Card to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewCard"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Card response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Card"
                }
              }
            }
          },
          "500": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/cards/{id}": {
      "get": {
        "description": "Get card",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Card",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Card response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Card"
                }
              }
            }
          },
          "500": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/cards/{id}/terminate": {
      "put": {
        "description": "Terminate card",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Card",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Success"
                }
              }
            }
          },
          "500": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/wallets": {
      "get": {
        "description": "Returns all wallets",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Page Limit",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page size",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Wallets response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Wallet"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/transactions": {
      "get": {
        "description": "Returns all transactions",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Page Limit",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page size",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transactions response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Transaction"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/{id}": {
      "get": {
        "description": "Get transaction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of transaction",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                }
              }
            }
          },
          "500": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{id}": {
      "get": {
        "description": "Get customer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of customer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Customer response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "500": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{id}/blacklist": {
      "put": {
        "description": "Blacklist customer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Customer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Success"
                }
              }
            }
          },
          "500": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/payouts/{id}": {
      "get": {
        "description": "Get payout",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of payout",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payout response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                }
              }
            }
          },
          "500": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/payouts": {
      "post": {
        "description": "Creates a new payout",
        "requestBody": {
          "description": "Payout details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPayout"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Payout response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Success"
                }
              }
            }
          },
          "500": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/resolve-account-number": {
      "post": {
        "description": "Resolve bank account number",
        "requestBody": {
          "description": "Account number to resolve",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewAccountNumber"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountNumber"
                }
              }
            }
          },
          "500": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/banks": {
      "get": {
        "description": "Returns all banks",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Page Limit",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page size",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Banks response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bank"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "NewAccountNumber": {
        "required": [
          "account_number",
          "bank_code"
        ],
        "type": "object",
        "properties": {
          "account_number": {
            "description": "Account Number",
            "type": "string"
          },
          "bank_code": {
            "description": "Bank Code",
            "type": "string"
          }
        }
      },
      "AccountNumber": {
        "type": "object",
        "properties": {
          "account_name": {
            "description": "Account Name",
            "type": "string"
          },
          "bank_name": {
            "description": "Bank Name",
            "type": "string"
          },
          "account_number": {
            "description": "Account Number",
            "type": "string"
          },
          "bank_code": {
            "description": "Bank Code",
            "type": "string"
          }
        }
      },
      "Bank": {
        "type": "object",
        "properties": {
          "bank_name": {
            "description": "Bank Name",
            "type": "string"
          },
          "bank_code": {
            "description": "Bank Code",
            "type": "string"
          }
        }
      },
      "NewPayout": {
        "required": [
          "amount",
          "account_number",
          "account_name",
          "bank_code",
          "currency"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "description": "Amount",
            "type": "integer",
            "format": "float64"
          },
          "account_number": {
            "description": "Account Number",
            "type": "string"
          },
          "bank_code": {
            "description": "Bank Code",
            "type": "string"
          },
          "currency": {
            "description": "Currency e.g NGN",
            "type": "string"
          },
          "narration": {
            "description": "Narration",
            "type": "string"
          },
          "reference": {
            "description": "Reference",
            "type": "string"
          }
        }
      },
      "Card": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Card ID",
            "type": "string"
          },
          "business_id": {
            "description": "Business ID",
            "type": "string"
          },
          "parent_id": {
            "description": "Parent Wallet ID",
            "type": "string"
          },
          "customer_id": {
            "description": "Customer ID",
            "type": "string"
          },
          "address_postal_code": {
            "description": "Address Postal Code",
            "type": "string"
          },
          "address_street": {
            "description": "Address Street",
            "type": "string"
          },
          "address_city": {
            "description": "Address City",
            "type": "string"
          },
          "address_state": {
            "description": "Address State",
            "type": "string"
          },
          "address_country": {
            "description": "Address Country",
            "type": "string"
          },
          "status": {
            "description": "Card Status",
            "type": "string"
          },
          "type": {
            "description": "Card Type",
            "type": "string"
          },
          "issuer": {
            "description": "Card Issuer",
            "type": "string"
          },
          "card_expiry": {
            "description": "Card Expiry",
            "type": "string"
          },
          "card_cvv": {
            "description": "Card CVV",
            "type": "string"
          },
          "card_name": {
            "description": "Card Name",
            "type": "string"
          },
          "card_numbeer": {
            "description": "Card Number",
            "type": "string"
          },
          "masked_pan": {
            "description": "Masked PAN",
            "type": "string"
          },
          "balance": {
            "description": "Balance",
            "type": "integer",
            "format": "float64"
          },
          "created_at": {
            "description": "Created at",
            "type": "string"
          },
          "updated_at": {
            "description": "Update at",
            "type": "string"
          }
        }
      },
      "NewCard": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "business_id": {
            "description": "Business ID",
            "type": "string"
          },
          "customer_id": {
            "description": "Customer ID",
            "type": "string"
          },
          "balance": {
            "description": "Balance",
            "type": "integer",
            "format": "float64"
          }
        }
      },
      "Wallet": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Wallet ID",
            "type": "string"
          },
          "business_id": {
            "description": "Business ID",
            "type": "string"
          },
          "parent_id": {
            "description": "Parent Wallet ID",
            "type": "string"
          },
          "customer_id": {
            "description": "Customer ID",
            "type": "string"
          },
          "account_name": {
            "description": "Account Name",
            "type": "string"
          },
          "account_number": {
            "description": "Account number",
            "type": "string"
          },
          "bank_code": {
            "description": "Bank Code",
            "type": "string"
          },
          "bank_name": {
            "description": "Bank Name",
            "type": "string"
          },
          "routing_number": {
            "description": "Routing Number",
            "type": "string"
          },
          "account_type": {
            "description": "Account Type",
            "type": "string"
          },
          "bank_address": {
            "description": "Bank Address",
            "type": "string"
          },
          "balance": {
            "description": "Balance",
            "type": "integer",
            "format": "float64"
          },
          "total_received": {
            "description": "Total Received",
            "type": "integer",
            "format": "float64"
          },
          "pending_balance": {
            "description": "Pending Balance",
            "type": "integer",
            "format": "float64"
          },
          "created_at": {
            "description": "Created at",
            "type": "string"
          },
          "updated_at": {
            "description": "Update at",
            "type": "string"
          }
        }
      },
      "Transaction": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Wallet ID",
            "type": "string"
          },
          "business_id": {
            "description": "Business ID",
            "type": "string"
          },
          "asset_id": {
            "description": "Asset Id",
            "type": "string"
          },
          "wallet_id": {
            "description": "Wallet ID",
            "type": "string"
          },
          "sub_wallet_id": {
            "description": "Sub-wallet ID",
            "type": "string"
          },
          "customer_id": {
            "description": "Customer ID",
            "type": "string"
          },
          "reference": {
            "description": "Reference",
            "type": "string"
          },
          "amount": {
            "description": "Amount",
            "type": "integer",
            "format": "float64"
          },
          "charges": {
            "description": "Charges",
            "type": "integer",
            "format": "float64"
          },
          "fiat_rate": {
            "description": "Fiat Rate",
            "type": "integer",
            "format": "float64"
          },
          "account_name": {
            "description": "Account Name",
            "type": "string"
          },
          "account_number": {
            "description": "Account number",
            "type": "string"
          },
          "bank_code": {
            "description": "Bank Code",
            "type": "string"
          },
          "bank_name": {
            "description": "Bank Name",
            "type": "string"
          },
          "detail": {
            "description": "Summary",
            "type": "string"
          },
          "category": {
            "description": "Category e.g DEPOSIT, SWAP, REVERSAL, REFUND, TRANSFER",
            "type": "string"
          },
          "type": {
            "description": "Type e.g DEBIT & CREDIT",
            "type": "string"
          },
          "session_id": {
            "description": "Session ID",
            "type": "string"
          },
          "report": {
            "description": "Report",
            "type": "boolean"
          },
          "report_message": {
            "description": "Report message",
            "type": "string"
          },
          "status": {
            "description": "Status e.g  PENDING, QUEUED, CONFIRMED, COMPLETED, PROCESSING, PROCESSED, FAILED",
            "type": "string"
          },
          "created_at": {
            "description": "Created at",
            "type": "string"
          },
          "updated_at": {
            "description": "Update at",
            "type": "string"
          }
        }
      },
      "Customer": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Customer ID",
            "type": "string"
          },
          "firstname": {
            "description": "Customer firstname",
            "type": "string"
          },
          "lastname": {
            "description": "Customer lastname",
            "type": "string"
          },
          "middlename": {
            "description": "Customer middlename",
            "type": "string"
          },
          "country": {
            "description": "Customer country e.g Nigeria",
            "type": "string"
          },
          "email": {
            "description": "Customer email",
            "type": "string"
          },
          "is_blacklisted": {
            "description": "Is customer blacklisted",
            "type": "boolean"
          },
          "created_at": {
            "description": "Created at",
            "type": "string"
          },
          "updated_at": {
            "description": "Update at",
            "type": "string"
          }
        }
      },
      "NewCustomer": {
        "required": [
          "email",
          "lastname",
          "firstname",
          "country"
        ],
        "type": "object",
        "properties": {
          "firstname": {
            "description": "Customer firstname",
            "type": "string"
          },
          "lastname": {
            "description": "Customer lastname",
            "type": "string"
          },
          "middlename": {
            "description": "Customer middlename",
            "type": "string"
          },
          "country": {
            "description": "Customer country e.g Nigeria",
            "type": "string"
          },
          "email": {
            "description": "Customer email",
            "type": "string"
          }
        }
      },
      "Success": {
        "required": [
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "Error": {
        "required": [
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}